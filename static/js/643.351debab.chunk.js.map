{"version":3,"file":"static/js/643.351debab.chunk.js","mappings":"uLAuBA,IAlBqB,WAEnB,MAAoCA,EAAAA,GAAAA,aAApC,eAAOC,EAAP,KAAmBC,EAAnB,KAYF,OAHAC,EAAAA,EAAAA,YAAU,WALNF,EAAWG,MAAM,CACfC,KAAM,QACNC,QAAS,iCAKd,KACQ,8BAAGJ,GAEX,C,oICwCD,EA3DkB,SAAC,GAAiC,IAA/BK,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAClC,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACA,OACE,UAAC,IAAD,CACEC,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,MAAO,CACLC,SAAU,KAEZN,KAAMA,EACNH,cAAeA,EACfC,SAAUA,EACVS,aAAa,MAdf,WAiBE,SAAC,SAAD,CACEC,MAAM,QACNP,KAAK,QACLQ,MAAO,CACL,CACEC,UAAU,EACVpB,QAAS,gCANf,UAUE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEkB,MAAM,WACNP,KAAK,WACLQ,MAAO,CACL,CACEC,UAAU,EACVpB,QAAS,gCANf,UAUE,SAAC,aAAD,OAGF,SAAC,SAAD,CACEc,WAAY,CACVO,OAAQ,EACRR,KAAM,IAHV,UAME,SAAC,KAAD,CAAQR,KAAK,UAAUiB,SAAS,SAAhC,wBAMP,E,kBCrDKf,EAAgB,CACpBI,KAAM,GACNY,MAAO,GACPC,SAAU,IAeZ,EAXkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAEVtB,GAASuB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA1BzB,MAMP,OAAQ,qCAAKA,IAAS,SAAC0B,EAAA,EAAD,IAAd,MAAgC,kCAAhC,KAA+C,SAAC,EAAD,CAAWvB,cAAeA,EAAeC,SAH5E,SAAAuB,GAAI,OAAIN,GAASO,EAAAA,EAAAA,IAAMD,GAAnB,IAGhB,MACT,C","sources":["components/Message/ErrorMessage.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["\nimport { message } from 'antd';\nimport { useEffect } from 'react';\n\n\nconst ErrorMessage = () => {\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n\n  const errorMessage = () => {\n    messageApi.error({\n      type: 'error',\n      content: 'Incorrect data, try again now',\n    });\n  };\nuseEffect(() => {\n  errorMessage();\n})\nreturn  (<>{contextHolder}</> )\n\n}\n\nexport default ErrorMessage\n","import { Button, Form, Input } from 'antd';\n\nconst LoginForm = ({ initialValues, onFinish }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      style={{\n        maxWidth: 600,\n      }}\n      form={form}\n      initialValues={initialValues}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport ErrorMessage from '../../components/Message/ErrorMessage';\nimport { login} from '../../redux/auth/authOperations';\n\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const {error} = useSelector(state => state.auth)\n\n\n  const handleLogin = data => dispatch(login(data));\n\n\n  return (<>  {error && <ErrorMessage/>}  <h2>Login</h2> <LoginForm initialValues={initialValues} onFinish={handleLogin}/> </>)\n};\nexport default LoginPage;\n"],"names":["message","messageApi","contextHolder","useEffect","error","type","content","initialValues","onFinish","Form","form","name","labelCol","span","wrapperCol","style","maxWidth","autoComplete","label","rules","required","offset","htmlType","email","password","dispatch","useDispatch","useSelector","state","auth","ErrorMessage","data","login"],"sourceRoot":""}